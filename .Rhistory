Da_5 %>%
summarize(Employment_Growth = emp_growth)%>%
arrange(desc(Employment_Growth)) %>%
kable(title = "Top 5 Fastest Growing Industries", caption = "Top 5 Fastest Growing and Most Declining Industries in Dallas County") %>%
kable_styling("striped",full_width = F) %>%
row_spec(6:10, background = '#005C53') %>%
row_spec(0, bold=TRUE) %>%
column_spec(2, bold=TRUE)
theme_set(theme_bw())
Da_5$`Industry` <- rownames(Da_5)  # create new column for car names
Da_5$score <- round(Da_5$emp_growth, 2)  # compute normalized mpg
Da_5 <-
Da_5 %>%
mutate(score_norm = case_when(emp_growth < 0 ~ "below",
TRUE ~ "above"))
Da_5 <- Da_5[order(Da_5$score_norm), ]  # sort
Da_5$`Industry` <- factor(Da_5$`Industry`, levels = Da_5$`Industry`)  # convert to factor to retain sorted order in plo
ggplot(Da_5, aes(x=reorder(industry_label_value,score), y=score, label=score)) +
geom_bar(stat='identity', aes(fill=score_norm), width=.5)  +
scale_fill_manual(name="Employment Growth",
labels = c("Above Average", "Below Average"),
values = c("above"="#fcc602", "below"="#005C53")) +
labs(subtitle="Dallas County",
title= "Top 5 Fastest Growing and Most Declining Industries",
x = "Industry", y = "Score") +
coord_flip()
Da_contop5 <- qwi_annual_wide1[order(qwi_annual_wide1$lq_2021,decreasing=T)[1:5],]
Da_conbtm5 <- qwi_annual_wide1[order(qwi_annual_wide1$lq_2021,decreasing=F)[1:5],]
Da_con5 <- rbind(Da_contop5,Da_conbtm5) %>%
dplyr::select(industry_label_value,lq_2021)
Da_con5 %>%
kable(title = "Top 5 Fastest Growing Industries", caption = "Top 5 Most and Least Concentrated Industries in Dallas") %>%
kable_styling("striped",full_width = F) %>%
row_spec(6:10, background = '#005C53') %>%
row_spec(0, bold=TRUE) %>%
column_spec(2, bold=TRUE)
ggplot(Da_contop5, aes(x="", y=lq_2021, fill=industry_label_value)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
scale_fill_manual(values = palette_con,
name = "Industry") +
labs(title = "Share of Top 5 Industries Concentration Score", caption = "Dallas County")
Da_top5pay <- qwi_tot_wide[order(qwi_tot_wide$pay_growth,decreasing=T)[1:5],]
Da_btm5pay <- qwi_tot_wide[order(qwi_tot_wide$pay_growth,decreasing=F)[1:5],]
Da_5pay <- rbind(Da_top5pay,Da_btm5pay)
Da_5pay %>%
summarize(Payment = pay_growth)%>%
arrange(desc(Payment)) %>%
kable(title = "Top 5 Fastest Growing Industries", caption = "Top 5 Highest and Lowest Paying Industries in Dallas County") %>%
kable_styling("striped",full_width = F) %>%
row_spec(6:10, background = '#005C53') %>%
row_spec(0, bold=TRUE) %>%
column_spec(2, bold=TRUE)
cos_2019 <- .5 * sum(abs(qwi_annual_wide1$avg_emp_2019_msa -
qwi_annual_wide1$avg_emp_2019_national), na.rm = TRUE)
cos_2021 <- .5 *  sum(abs(qwi_annual_wide1$avg_emp_2021_msa -
qwi_annual_wide1$avg_emp_2021_national), na.rm = TRUE)
cos_2019
cos_2021
hhi_2019 <- sum(qwi_annual_wide1$avg_emp_2019_msa^2, na.rm = TRUE)
hhi_2021 <- sum(qwi_annual_wide1$avg_emp_2021_msa^2, na.rm = TRUE)
hhi_2019
hhi_2021
qwi_annual_wide1 <- qwi_annual_wide1 %>%
select(1:9) %>%
mutate(emp_change1921 = avg_emp_2021_msa - avg_emp_2019_msa)
qwi_annual_wide1 <- qwi_annual_wide1 %>%
mutate(nat_growth = avg_emp_2019_msa *
((sum(avg_emp_2021_national, na.rm = TRUE)/
sum(avg_emp_2019_national, na.rm = TRUE)) - 1))
qwi_annual_wide1 <- qwi_annual_wide1 %>%
mutate(ind_mix = avg_emp_2019_msa *
((avg_emp_2021_national/avg_emp_2019_national) -
(sum(avg_emp_2021_national, na.rm = TRUE)/sum(avg_emp_2019_national, na.rm = TRUE))))
qwi_annual_wide1 <- qwi_annual_wide1 %>%
mutate(reg_shift = avg_emp_2019_msa *
((avg_emp_2021_msa/avg_emp_2019_msa) -
(avg_emp_2021_national/avg_emp_2019_national)))
qwi_annual_wide1 <- qwi_annual_wide1 %>%
mutate(change = nat_growth + ind_mix + reg_shift)
change_top5 <- qwi_annual_wide1[order(qwi_annual_wide1$change,decreasing=T)[1:5],]
change_btm5 <- qwi_annual_wide1[order(qwi_annual_wide1$change,decreasing=F)[1:5],]
change_top5$year <- 2021
change_btm5$year <- 2021
change_5 <- rbind(change_top5,change_btm5)
change_5$year <- "2021"
change_5 <- change_5[order(change_5$change,decreasing=T)[1:10],]
palette10 <- c("#88E8F2","#5E8C61","#2F402C","#F2B950","#D95555","#335918","#BF9460","#592A0F","#D94B2B","#731616")
ggplot() +
geom_bar(data = change_5, aes(x=year, y=change, fill=industry_label_value),stat = "identity") +
scale_fill_manual(values = palette10,
name = "Industry") +
labs(title = "Top and Bottom 5 Industries with the most employment growth/decline",
subtitle = "Dallas County 2019-2021")
View(qwi_annual_wide1)
View(change_5)
install.packages("languageserver")
file.path(R.home("bin"), "R")
library(knitr)
opts_chunk$set(collapse = TRUE, prompt = TRUE, echo = TRUE)
library(tidyverse)
library(DAAG)
library(MASS)
library(stargazer)
library(ggpmisc)
library(car)
library(ggcorrplot)
rm(list=ls())
options(scipen = 999)
print("!!!!!")
install.packages("languageserver")
library(aod)
library(ggplot2)
library(rms)
library(tidyverse)
library(DAAG)
library(MASS)
library(stargazer)
library(gmodels)
df <- read.csv("Data/Logistic Regression Data.csv")
head(df)
summary(df)
summary(factor(df$DRINKING_D))
summary(factor(df$COLLISION_))
summary(factor(df$FATAL_OR_M))
summary(factor(df$OVERTURNED))
summary(factor(df$CELL_PHONE))
summary(factor(df$SPEEDING))
summary(factor(df$AGGRESSIVE))
summary(factor(df$DRIVER1617))
summary(factor(df$DRIVER65PLUS))
summary(factor(df$DRINKING_D))
DRINKING_D.tab <- table(df$DRINKING_D)
prop.table(DRINKING_D.tab)
COLLISION.tab <- table(df$COLLISION_)
prop.table(COLLISION.tab)
FATAL_OR_M.tab <- table(df$FATAL_OR_M)
prop.table(FATAL_OR_M.tab)
OVERTURNED.tab <- table(df$OVERTURNED)
prop.table(OVERTURNED.tab)
CELL_PHONE.tab <- table(df$CELL_PHONE)
prop.table(CELL_PHONE.tab)
SPEEDING.tab <- table(df$SPEEDING)
prop.table(SPEEDING.tab)
AGGRESSIVE.tab <- table(df$AGGRESSIVE)
prop.table(AGGRESSIVE.tab)
DRIVER1617.tab <- table(df$DRIVER1617)
prop.table(DRIVER1617.tab)
DRIVER65PLUS.tab <- table(df$DRIVER65PLUS)
prop.table(DRIVER65PLUS.tab)
#"DRINKING_D", "FATAL_OR_M", "OVERTURNED", "CELL_PHONE", "SPEEDING", "AGGRESSIVE", "DRIVER1617", "DRIVER65PLUS"
CrossTable(df$FATAL_OR_M,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$OVERTURNED,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$CELL_PHONE,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$SPEEDING,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$AGGRESSIVE,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$DRIVER1617,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$DRIVER65PLUS,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
summary(factor(df$DRINKING_D))
DRINKING_D.tab <- table(df$DRINKING_D)
prop.table(DRINKING_D.tab)
library(aod)
library(ggplot2)
library(rms)
library(tidyverse)
library(DAAG)
library(MASS)
library(stargazer)
library(gmodels)
tapply(df$PCTBACHMOR,df$DRINKING_D, mean)
options(width = 60)
local({
hook_output <- knitr::knit_hooks$get('output')
knitr::knit_hooks$set(output = function(x, options) {
if (!is.null(options$max.height)) options$attr.output <- c(
options$attr.output,
sprintf('style="max-height: %s;"', options$max.height)
)
hook_output(x, options)
})
})
library(aod)
library(ggplot2)
library(rms)
library(tidyverse)
library(DAAG)
library(MASS)
library(stargazer)
library(gmodels)
df <- read.csv("Data/Logistic Regression Data.csv")
head(df)
summary(df)
summary(factor(df$COLLISION_))
summary(factor(df$FATAL_OR_M))
summary(factor(df$OVERTURNED))
summary(factor(df$CELL_PHONE))
summary(factor(df$SPEEDING))
summary(factor(df$AGGRESSIVE))
summary(factor(df$DRIVER1617))
summary(factor(df$DRIVER65PLUS))
COLLISION.tab <- table(df$COLLISION_)
prop.table(COLLISION.tab)
FATAL_OR_M.tab <- table(df$FATAL_OR_M)
prop.table(FATAL_OR_M.tab)
OVERTURNED.tab <- table(df$OVERTURNED)
prop.table(OVERTURNED.tab)
CELL_PHONE.tab <- table(df$CELL_PHONE)
prop.table(CELL_PHONE.tab)
SPEEDING.tab <- table(df$SPEEDING)
prop.table(SPEEDING.tab)
AGGRESSIVE.tab <- table(df$AGGRESSIVE)
prop.table(AGGRESSIVE.tab)
DRIVER1617.tab <- table(df$DRIVER1617)
prop.table(DRIVER1617.tab)
DRIVER65PLUS.tab <- table(df$DRIVER65PLUS)
prop.table(DRIVER65PLUS.tab)
summary(factor(df$DRINKING_D))
DRINKING_D.tab <- table(df$DRINKING_D)
prop.table(DRINKING_D.tab)
#"FATAL_OR_M", "OVERTURNED", "CELL_PHONE", "SPEEDING", "AGGRESSIVE", "DRIVER1617", "DRIVER65PLUS"
CrossTable(df$FATAL_OR_M,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$OVERTURNED,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$CELL_PHONE,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$SPEEDING,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$AGGRESSIVE,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$DRIVER1617,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$DRIVER65PLUS,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
tapply(df$PCTBACHMOR,df$DRINKING_D, mean)
tapply(df$PCTBACHMOR, df$DRINKING_D, sd)
tapply(df$MEDHHINC, df$DRINKING_D, mean)
tapply(df$MEDHHINC, df$DRINKING_D, sd)
t.test(df$PCTBACHMOR~df$DRINKING_D)
t.test(df$MEDHHINC~df$DRINKING_D)
library(aod)
library(ggplot2)
library(rms)
library(tidyverse)
library(DAAG)
library(MASS)
library(stargazer)
library(gmodels)
library(ggcorrplot)
#Logistic Regression
mylogit <- glm(DRINKING_D ~ FATAL_OR_M + OVERTURNED + CELL_PHONE + SPEEDING + AGGRESSIVE + DRIVER1617 + DRIVER65PLUS + PCTBACHMOR + MEDHHINC, data=df, family = "binomial")
summary(mylogit)
mylogit1 <- glm(DRINKING_D ~ FATAL_OR_M + OVERTURNED + CELL_PHONE + SPEEDING + AGGRESSIVE + DRIVER1617 + DRIVER65PLUS, data=df, family = "binomial")
summary(mylogit1)
AIC(mylogit, mylogit1)
#Logistic Regression
mylogit <- glm(DRINKING_D ~ FATAL_OR_M + OVERTURNED + CELL_PHONE + SPEEDING + AGGRESSIVE + DRIVER1617 + DRIVER65PLUS + PCTBACHMOR + MEDHHINC, data=df, family = "binomial")
summary(mylogit)
#Logistic Regression
mylogit <- glm(DRINKING_D ~ FATAL_OR_M + OVERTURNED + CELL_PHONE + SPEEDING + AGGRESSIVE + DRIVER1617 + DRIVER65PLUS + PCTBACHMOR + MEDHHINC, data=df, family = "binomial")
mylogit1 <- glm(DRINKING_D ~ FATAL_OR_M + OVERTURNED + CELL_PHONE + SPEEDING + AGGRESSIVE + DRIVER1617 + DRIVER65PLUS, data=df, family = "binomial")
knitr::opts_chunk$set(echo = TRUE)
library(aod)
library(ggplot2)
library(rms)
library(tidyverse)
library(DAAG)
library(MASS)
library(stargazer)
library(gmodels)
exp(cbind(OR = coef(mylogit), confint(mylogit)))
logitoutput <- summary(mylogit)
logitcoeffs <-mylogit$coefficients
logitcoeffs
OR_ci <- exp(cbind(OR = coef(mylogit),confint(mylogit)))
finallogitoutput<-cbind(logitcoeffs,OR_ci)
class(finallogitoutput)
#fit.binary = (fit>=0.5)
#CrossTable(fit.binary, df$Hospital, prop.r=FALSE, prop.t=FALSE, prop.chisq=FALSE)
AIC(mylogit, mylogit1)
options(width = 60)
local({
hook_output <- knitr::knit_hooks$get('output')
knitr::knit_hooks$set(output = function(x, options) {
if (!is.null(options$max.height)) options$attr.output <- c(
options$attr.output,
sprintf('style="max-height: %s;"', options$max.height)
)
hook_output(x, options)
})
})
library(aod)
library(ggplot2)
library(rms)
library(tidyverse)
library(DAAG)
library(MASS)
library(stargazer)
library(gmodels)
library(ggcorrplot)
df <- read.csv("Data/Logistic Regression Data.csv")
head(df)
summary(df)
summary(factor(df$COLLISION_))
summary(factor(df$FATAL_OR_M))
summary(factor(df$OVERTURNED))
summary(factor(df$CELL_PHONE))
summary(factor(df$SPEEDING))
summary(factor(df$AGGRESSIVE))
summary(factor(df$DRIVER1617))
summary(factor(df$DRIVER65PLUS))
COLLISION.tab <- table(df$COLLISION_)
prop.table(COLLISION.tab)
FATAL_OR_M.tab <- table(df$FATAL_OR_M)
prop.table(FATAL_OR_M.tab)
OVERTURNED.tab <- table(df$OVERTURNED)
prop.table(OVERTURNED.tab)
CELL_PHONE.tab <- table(df$CELL_PHONE)
prop.table(CELL_PHONE.tab)
SPEEDING.tab <- table(df$SPEEDING)
prop.table(SPEEDING.tab)
AGGRESSIVE.tab <- table(df$AGGRESSIVE)
prop.table(AGGRESSIVE.tab)
DRIVER1617.tab <- table(df$DRIVER1617)
prop.table(DRIVER1617.tab)
DRIVER65PLUS.tab <- table(df$DRIVER65PLUS)
prop.table(DRIVER65PLUS.tab)
summary(factor(df$DRINKING_D))
DRINKING_D.tab <- table(df$DRINKING_D)
prop.table(DRINKING_D.tab)
#"FATAL_OR_M", "OVERTURNED", "CELL_PHONE", "SPEEDING", "AGGRESSIVE", "DRIVER1617", "DRIVER65PLUS"
CrossTable(df$FATAL_OR_M,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$OVERTURNED,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$CELL_PHONE,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$SPEEDING,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$AGGRESSIVE,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$DRIVER1617,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$DRIVER65PLUS,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
tapply(df$PCTBACHMOR,df$DRINKING_D, mean)
tapply(df$PCTBACHMOR, df$DRINKING_D, sd)
tapply(df$MEDHHINC, df$DRINKING_D, mean)
tapply(df$MEDHHINC, df$DRINKING_D, sd)
t.test(df$PCTBACHMOR~df$DRINKING_D)
t.test(df$MEDHHINC~df$DRINKING_D)
#"DRINKING_D", "FATAL_OR_M", "OVERTURNED", "CELL_PHONE", "SPEEDING", "AGGRESSIVE", "DRIVER1617", "DRIVER65PLUS"
ddf <- df %>%
dplyr::select(FATAL_OR_M, OVERTURNED, CELL_PHONE, SPEEDING, AGGRESSIVE, DRIVER1617, DRIVER65PLUS, PCTBACHMOR, MEDHHINC)
ggcorrplot(cor(ddf),outline.color = "white",lab =T) +
scale_color_manual(name = "Correlation", values = c("red", "blue"))
#Logistic Regression
mylogit <- glm(DRINKING_D ~ FATAL_OR_M + OVERTURNED + CELL_PHONE + SPEEDING + AGGRESSIVE + DRIVER1617 + DRIVER65PLUS + PCTBACHMOR + MEDHHINC, data=df, family = "binomial")
mylogit1 <- glm(DRINKING_D ~ FATAL_OR_M + OVERTURNED + CELL_PHONE + SPEEDING + AGGRESSIVE + DRIVER1617 + DRIVER65PLUS, data=df, family = "binomial")
summary(mylogit)
exp(cbind(OR = coef(mylogit), confint(mylogit)))
logitoutput <- summary(mylogit)
logitcoeffs <-mylogit$coefficients
logitcoeffs
OR_ci <- exp(cbind(OR = coef(mylogit),confint(mylogit)))
finallogitoutput<-cbind(logitcoeffs,OR_ci)
class(finallogitoutput)
exp(cbind(OR = coef(mylogit), confint(mylogit)))
logitoutput <- summary(mylogit)
logitcoeffs <-mylogit$coefficients
logitcoeffs
OR_ci <- exp(cbind(OR = coef(mylogit),confint(mylogit)))
finallogitoutput<-cbind(logitcoeffs,OR_ci)
class(finallogitoutput)
exp(cbind(OR = coef(mylogit), confint(mylogit)))
OR_ci <- exp(cbind(OR = coef(mylogit),confint(mylogit)))
logitoutput <- summary(mylogit)
logitcoeffs <-mylogit$coefficients
logitcoeffs
finallogitoutput<-cbind(logitcoeffs,OR_ci)
class(finallogitoutput)
#a is a matrix combining the vectors containing y and y-hat in matrix a; first variable is
#DRINKING_D, which is y; second variable is fit, which is y-hat
a <- cbind(df$DRINKING_D, fit)
knitr::opts_chunk$set(echo = TRUE)
library(aod)
library(ggplot2)
library(rms)
library(tidyverse)
library(DAAG)
library(MASS)
library(stargazer)
library(gmodels)
df <- read.csv("E:/course/2022/Musa500/HW 3/Logistic Regression Data.csv")
head(df)
summary(df)
summary(factor(df$DRINKING_D))
summary(factor(df$COLLISION_))
summary(factor(df$FATAL_OR_M))
summary(factor(df$OVERTURNED))
summary(factor(df$CELL_PHONE))
summary(factor(df$SPEEDING))
summary(factor(df$AGGRESSIVE))
summary(factor(df$DRIVER1617))
summary(factor(df$DRIVER65PLUS))
DRINKING_D.tab <- table(df$DRINKING_D)
prop.table(DRINKING_D.tab)
COLLISION.tab <- table(df$COLLISION_)
prop.table(COLLISION.tab)
FATAL_OR_M.tab <- table(df$FATAL_OR_M)
prop.table(FATAL_OR_M.tab)
OVERTURNED.tab <- table(df$OVERTURNED)
prop.table(OVERTURNED.tab)
CELL_PHONE.tab <- table(df$CELL_PHONE)
prop.table(CELL_PHONE.tab)
SPEEDING.tab <- table(df$SPEEDING)
prop.table(SPEEDING.tab)
AGGRESSIVE.tab <- table(df$AGGRESSIVE)
prop.table(AGGRESSIVE.tab)
DRIVER1617.tab <- table(df$DRIVER1617)
prop.table(DRIVER1617.tab)
DRIVER65PLUS.tab <- table(df$DRIVER65PLUS)
prop.table(DRIVER65PLUS.tab)
#"DRINKING_D", "FATAL_OR_M", "OVERTURNED", "CELL_PHONE", "SPEEDING", "AGGRESSIVE", "DRIVER1617", "DRIVER65PLUS"
CrossTable(df$COLLISION_, df$DRINKING_D, prop.r=FALSE, prop.t=FALSE, prop.chisq=FALSE, chisq=TRUE)
CrossTable(df$FATAL_OR_M,df$DRINKING_D, prop.r=FALSE, prop.t=FALSE, prop.chisq=FALSE, format="SPSS")
CrossTable(df$OVERTURNED,df$DRINKING_D, prop.r=FALSE, prop.t=FALSE, prop.chisq=FALSE, format="SPSS")
CrossTable(df$CELL_PHONE,df$DRINKING_D, prop.r=FALSE, prop.t=FALSE, prop.chisq=FALSE, format="SPSS")
CrossTable(df$SPEEDING,df$DRINKING_D, prop.r=FALSE, prop.t=FALSE, prop.chisq=FALSE, format="SPSS")
CrossTable(df$AGGRESSIVE,df$DRINKING_D, prop.r=FALSE, prop.t=FALSE, prop.chisq=FALSE, format="SPSS")
CrossTable(df$DRIVER1617,df$DRINKING_D, prop.r=FALSE, prop.t=FALSE, prop.chisq=FALSE, format="SPSS")
CrossTable(df$DRIVER65PLUS,df$DRINKING_D, prop.r=FALSE, prop.t=FALSE, prop.chisq=FALSE, format="SPSS")
#"DRINKING_D", "FATAL_OR_M", "OVERTURNED", "CELL_PHONE", "SPEEDING", "AGGRESSIVE", "DRIVER1617", "DRIVER65PLUS"
CrossTable(df$FATAL_OR_M,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$OVERTURNED,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$CELL_PHONE,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$SPEEDING,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$AGGRESSIVE,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$DRIVER1617,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
CrossTable(df$DRIVER65PLUS,df$DRINKING_D,
prop.r=FALSE, prop.t=FALSE,prop.chisq=FALSE,chisq=TRUE)
tapply(df$PCTBACHMOR,df$DRINKING_D, mean)
tapply(df$PCTBACHMOR, df$DRINKING_D, sd)
tapply(df$MEDHHINC, df$DRINKING_D, mean)
tapply(df$MEDHHINC, df$DRINKING_D, sd)
t.test(df$PCTBACHMOR~df$DRINKING_D)
t.test(df$MEDHHINC~df$DRINKING_D)
#"DRINKING_D", "FATAL_OR_M", "OVERTURNED", "CELL_PHONE", "SPEEDING", "AGGRESSIVE", "DRIVER1617", "DRIVER65PLUS"
ddf <- df %>%
dplyr::select(FATAL_OR_M, OVERTURNED, CELL_PHONE, SPEEDING, AGGRESSIVE, DRIVER1617, DRIVER65PLUS, PCTBACHMOR, MEDHHINC)
library(ggcorrplot)
ggcorrplot(cor(ddf),outline.color = "white",lab =T) +
scale_color_manual(name = "Correlation", values = c("red", "blue"))
#Logistic Regression
mylogit <- glm(DRINKING_D ~ FATAL_OR_M + OVERTURNED + CELL_PHONE + SPEEDING + AGGRESSIVE + DRIVER1617 + DRIVER65PLUS + PCTBACHMOR + MEDHHINC, data=df, family = "binomial")
summary(mylogit)
mylogit1 <- glm(DRINKING_D ~ FATAL_OR_M + OVERTURNED + CELL_PHONE + SPEEDING + AGGRESSIVE + DRIVER1617 + DRIVER65PLUS, data=df, family = "binomial")
summary(mylogit1)
AIC(mylogit, mylogit1)
exp(cbind(OR = coef(mylogit), confint(mylogit)))
logitoutput <- summary(mylogit)
logitcoeffs <-mylogit$coefficients
logitcoeffs
OR_ci <- exp(cbind(OR = coef(mylogit),confint(mylogit)))
finallogitoutput<-cbind(logitcoeffs,OR_ci)
class(finallogitoutput)
#Histogram of fitted values (predicted probabilities of y = 1)
fit <-mylogit$fitted.values
hist(fit)
#a is a matrix combining the vectors containing y and y-hat in matrix a; first variable is
#DRINKING_D, which is y; second variable is fit, which is y-hat
a <- cbind(df$DRINKING_D, fit)
b <- a[order(a[,2]),]
c <- (b[,2] >= 0.05)
d <- cbind(b,c)
colnames(d) <- c("Observed.DRINKING_D","Probability.DRINKING_D","Prob.Above.Cutoff")
e=as.data.frame(d)
CrossTable(e$Prob.Above.Cutoff, e$Observed.DRINKING_D, prop.r=FALSE,prop.chisq=FALSE, chisq=FALSE,prop.t=FALSE)
View(e)
#0.02, 0.03, 0.05, 0.07, 0.08, 0.09, 0.10, 0.15, 0.20, 0.50
cutoff_values <- c(0.02, 0.03, 0.05, 0.07, 0.08, 0.09, 0.10, 0.15, 0.20, 0.50)
a <- cbind(df$DRINKING_D, fit)
b <- a[order(a[,2]),]
results <- data.frame(cutoff = numeric(),
sensitivity = numeric(),
specificity = numeric(),
misclassification_rate = numeric())
for (cutoff in cutoff_values) {
c <- (b[,2] >= cutoff)
d <- cbind(b,c)
colnames(d) <- c("Observed.DRINKING_D","Probability.DRINKING_D","Prob.Above.Cutoff")
e <- as.data.frame(d)
cross_table <- CrossTable(e$Prob.Above.Cutoff, e$Observed.DRINKING_D, prop.r=FALSE,prop.chisq=FALSE, chisq=FALSE,prop.t=FALSE)
sensitivity <- cross_table$t[4]/(cross_table$t[3]+cross_table$t[4])
specificity <- cross_table$t[1]/(cross_table$t[1]+cross_table$t[2])
misclassification_rate <- (cross_table$t[3]+cross_table$t[2])/(cross_table$t[1]+cross_table$t[2]+cross_table$t[3]+cross_table$t[4])
results <- rbind(results, data.frame(cutoff, sensitivity, specificity, misclassification_rate))
}
